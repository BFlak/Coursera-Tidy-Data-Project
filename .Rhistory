test_activities <- read.table("y_test.txt", col.names = "Activity Code")
test_subjects <- read.table("subject_test.txt",col.names = "Subject ID")
train <- read.table("X_train.txt",col.names = as.vector(vector_labels[,2]),colClasses = vector_class)
train_activities <- read.table("y_train.txt", col.names = "Activity Code")
train_subjects <- read.table("subject_train.txt", col.names = "Subject ID")
##Combine data, activity labels, and subject labels for the test data and the train data separately.
##Also adding 2 columns:
## "Data Source": identifies whether data is from test dataset or train dataset.
## "Activity ID": placeholder empty column for translated Activity codes.
all_test <- cbind("Data Source" = rep("test", nrow(test)),test_subjects, test_activities, "Activity" = vector(mode = "character", length = nrow(test)), test)
all_train <- cbind("Data Source" = rep("train", nrow(train)),train_subjects, train_activities, "Activity" = vector(mode = "character", length = nrow(train)), train)
##Combine test and train data. Sort by Subject ID.
data <- arrange(rbind(all_test, all_train),Subject.ID)
##Translate Activity ID Code into Activity ID (character describing activity).
data[,"Activity"] <- as.character(data[,"Activity"])
activities <- c("Walking", "Walking_Upstairs", "Walking_Downstairs", "Sitting", "Standing", "Laying")
for(i in 1:nrow(data))
{
index <- data[i,"Activity.Code"]
data[i,"Activity"] <- activities[index]
}
##Create means and standard deviation for each measurement by Subject ID and Activity.
##First four columns were excluded from mean and standard deviation calculations since they do not represent measurements.
means <- aggregate(data[,5:ncol(data)], by=list(data$Subject.ID,data$Activity),FUN=mean)
sds <- aggregate(data[,5:ncol(data)], by=list(data$Subject.ID,data$Activity),FUN=sd)
##Label each column of "means" and "stdevs" as being a mean or standard deviation, respectively.
cname_means <- colnames(means)
cname_sds <- colnames(sds)
Add_type <- function(dataset,index, type)
{
dataset[index] <- paste(dataset[index], type, sep = "-")
}
for(i in 3:nrow(means))
{
Add_type(cname_means,i, "Mean")
}
for (i in 3:nrow(sds))
{
Add_type(cname_sds,i,"SD")
}
}
##Read in features.txt, which contains the vector labels for each of the datasets.
vector_labels <- read.table("features.txt")
##Determine which vector labels contain the mean or standard deviation.
log_sel_vectors <- grepl("mean|std", as.vector(vector_labels[,2]))
##Create vector containing column class for all selected columns (numeric) and NULL for all unselected columns (not mean or standard deviation).
vector_class <- vector(mode = "character", length = nrow(vector_labels))
for (i in 1:nrow(vector_labels))
{
if(log_sel_vectors[i]==FALSE)
{
vector_class[i] <- "NULL"
}
else
{
vector_class[i] <- "character"
}
}
##Read in test and train datasets, along with respective activity and subject labels.
test <- read.table("X_test.txt",col.names = as.vector(vector_labels[,2]),colClasses = vector_class)
test_activities <- read.table("y_test.txt", col.names = "Activity Code")
test_subjects <- read.table("subject_test.txt",col.names = "Subject ID")
train <- read.table("X_train.txt",col.names = as.vector(vector_labels[,2]),colClasses = vector_class)
train_activities <- read.table("y_train.txt", col.names = "Activity Code")
train_subjects <- read.table("subject_train.txt", col.names = "Subject ID")
##Combine data, activity labels, and subject labels for the test data and the train data separately.
##Also adding 2 columns:
## "Data Source": identifies whether data is from test dataset or train dataset.
## "Activity ID": placeholder empty column for translated Activity codes.
all_test <- cbind("Data Source" = rep("test", nrow(test)),test_subjects, test_activities, "Activity" = vector(mode = "character", length = nrow(test)), test)
all_train <- cbind("Data Source" = rep("train", nrow(train)),train_subjects, train_activities, "Activity" = vector(mode = "character", length = nrow(train)), train)
##Combine test and train data. Sort by Subject ID.
data <- arrange(rbind(all_test, all_train),Subject.ID)
##Translate Activity ID Code into Activity ID (character describing activity).
data[,"Activity"] <- as.character(data[,"Activity"])
activities <- c("Walking", "Walking_Upstairs", "Walking_Downstairs", "Sitting", "Standing", "Laying")
for(i in 1:nrow(data))
{
index <- data[i,"Activity.Code"]
data[i,"Activity"] <- activities[index]
}
##Create means and standard deviation for each measurement by Subject ID and Activity.
##First four columns were excluded from mean and standard deviation calculations since they do not represent measurements.
means <- aggregate(data[,5:ncol(data)], by=list(data$Subject.ID,data$Activity),FUN=mean)
sds <- aggregate(data[,5:ncol(data)], by=list(data$Subject.ID,data$Activity),FUN=sd)
##Label each column of "means" and "stdevs" as being a mean or standard deviation, respectively.
cname_means <- colnames(means)
cname_sds <- colnames(sds)
Add_type <- function(dataset,index, type)
{
dataset[index] <- paste(dataset[index], type, sep = "-")
}
for(i in 3:nrow(means))
{
Add_type(cname_means,i, "Mean")
}
for (i in 3:nrow(sds))
{
Add_type(cname_sds,i,"SD")
}
class(cname_means)
cname_means[1:10]
cname_means2 <- cname_means
cname_means2[3] <- paste(cname_means[3],"-Mean")
cname_means2[1:10]
for(i in 3:ncol(cname_means))
{
Add_type(cname_means,i, "Mean")
}
for (i in 3:ncol(cname_sds))
{
Add_type(cname_sds,i,"SD")
}
for(i in 3:length(cname_means))
{
Add_type(cname_means,i, "Mean")
}
for (i in 3:length(cname_sds))
{
Add_type(cname_sds,i,"SD")
}
cname_means[1:10]
cname_means <- colnames(means)
cname_sds <- colnames(sds)
Add_type <- function(dataset,index, type)
{
dataset[index] <- paste(dataset[index], type, sep = " - ")
}
for(i in 3:length(cname_means))
{
Add_type(cname_means,i, "Mean")
}
for (i in 3:length(cname_sds))
{
Add_type(cname_sds,i,"SD")
}
length(cname_means)
cname_means[1:10]
for(i in 3:length(cname_means))
{
##Add_type(cname_means,i, "Mean")
cname_means[i] <- paste(cname_means[i],"Mean", sep = " - ")
}
cname_means[1:10]
for (i in 3:length(cname_sds))
{
##Add_type(cname_sds,i,"SD")
cname_sds[i] <- paste(cname_sd[i],"SD", sep = " - ")
}
for (i in 3:length(cname_sds))
{
##Add_type(cname_sds,i,"SD")
cname_sds[i] <- paste(cname_sds[i],"SD", sep = " - ")
}
cname_sds[1:10]
?join
colnames(means) <- cname_means
colnames(sds) <- cname_sds
colnames(means)
colnames(sds)
colnames(means)[1:2] <- c("Subject.ID","Activity")
colnames(sds)[1:2] <- c("Subject.ID","Activity")
cname_means <- colnames(means)
cname_sds <- colnames(sds)
for(i in 3:length(cname_means))
{
cname_means[i] <- paste(cname_means[i],"Mean", sep = " - ")
}
for (i in 3:length(cname_sds))
{
cname_sds[i] <- paste(cname_sds[i],"SD", sep = " - ")
}
colnames(means) <- cname_means
colnames(sds) <- cname_sds
colnames(means)
means <- aggregate(data[,5:ncol(data)], by=list(data$Subject.ID,data$Activity),FUN=mean)
sds <- aggregate(data[,5:ncol(data)], by=list(data$Subject.ID,data$Activity),FUN=sd)
##Label each column of "means" and "stdevs" as being a mean or standard deviation, respectively.
##First two columns were also renamed.
colnames(means)[1:2] <- c("Subject.ID","Activity")
colnames(sds)[1:2] <- c("Subject.ID","Activity")
cname_means <- colnames(means)
cname_sds <- colnames(sds)
for(i in 3:length(cname_means))
{
cname_means[i] <- paste(cname_means[i],"Mean", sep = " - ")
}
for (i in 3:length(cname_sds))
{
cname_sds[i] <- paste(cname_sds[i],"SD", sep = " - ")
}
colnames(means) <- cname_means
colnames(sds) <- cname_sds
colnames(means)
colnames(sds)
join(means,sds,by=c("Subject.ID","Activity"))
mean_sd_data <- join(means,sds,by=c("Subject.ID","Activity"))
head(mean_sd_data[,1:10])
sum_data <- join(means,sds,by=c("Subject.ID","Activity"))
class(sum_data)
class(sum_data[,5])
head(sum_data[,1:10])
?merge
nrow(means)
nrow(sum_data)
sum_data2 <- merge(means, sds, by=c("Subject.ID","Activity"))
head(sum_data2[,1:10])
sum_data2 <- merge(means, sds, by=c(Subject.ID,Activity))
sum_data2 <- merge(means, sds, by=means[,1:2])
sum_data2 <- merge(means, sds, by.x=means[,1:2], by.y=sds[,1:2])
sum_data <- cbind(means,sds)
head(sum_data[,1:10])
head(means[1:10])
means <- aggregate(data[,5:ncol(data)], by=list(data$Subject.ID,data$Activity),FUN=mean)
head(sum_data[,150:162])
means <- aggregate(data[,5:ncol(data)], by=list(data$Subject.ID,data$Activity),FUN=mean)
warnings()
sds <- aggregate(data[,5:ncol(data)], by=list(data$Subject.ID,data$Activity),FUN=sd)
means <- aggregate(data[,5:ncol(data)], by=list(data$Subject.ID,data$Activity),FUN=mean)
sds <- aggregate(data[,5:ncol(data)], by=list(data$Subject.ID,data$Activity),FUN=sd)
sds <- aggregate(data[,5:ncol(data)], by=list(data$Subject.ID,data$Activity),FUN=mean)
?mean
?median
sds <- aggregate(data[,5:ncol(data)], by=list(data$Subject.ID,data$Activity),FUN=median)
sds <- aggregate(data[,5:ncol(data)], by=list(data$Subject.ID,data$Activity),FUN=sd)
sds <- aggregate(data[,5:ncol(data)], by=list(data$Subject.ID,data$Activity),FUN=median)
?sd
?mean
data[,5:ncol(data)]
class(data[,6])
as.numeric(data[,5:ncol(data)])
class(data)
class(data[,5:ncol(data)])
sapply(as.numeric, data[,5:ncol(data)])
sapply(data[,5:ncol(data)], as.numeric)
sds <- aggregate(data[,5:ncol(data)], by=list(data$Subject.ID,data$Activity),FUN=sd)
sds <- aggregate(sapply(data[,5:ncol(data)], as.numeric), by=list(data$Subject.ID,data$Activity),FUN=median)
head(sds[,1:10])
head(data[,1:10])
data <- arrange(rbind(all_test, all_train),Subject.ID)
data[,5:ncol(data)] <- sapply(data[,5:ncol(data)],as.numeric)
data[,"Activity"] <- as.character(data[,"Activity"])
activities <- c("Walking", "Walking_Upstairs", "Walking_Downstairs", "Sitting", "Standing", "Laying")
for(i in 1:nrow(data))
{
index <- data[i,"Activity.Code"]
data[i,"Activity"] <- activities[index]
}
colnames(means)[1:2] <- c("Subject.ID","Activity")
colnames(sds)[1:2] <- c("Subject.ID","Activity")
cname_means <- colnames(means)
cname_sds <- colnames(sds)
for(i in 3:length(cname_means))
{
cname_means[i] <- paste(cname_means[i],"Mean", sep = " - ")
}
for (i in 3:length(cname_sds))
{
cname_sds[i] <- paste(cname_sds[i],"SD", sep = " - ")
}
colnames(means) <- cname_means
colnames(sds) <- cname_sds
sum_data <- cbind(means,sds)
head(sum_data[,1:10])
head(data[,1:10])
head(means[,1:10])
means <- aggregate(sapply(data[,5:ncol(data)],as.numeric), by=list(data$Subject.ID,data$Activity),FUN=mean)
sds <- aggregate(data[,5:ncol(data)], by=list(data$Subject.ID,data$Activity),FUN=sd)
colnames(means)[1:2] <- c("Subject.ID","Activity")
colnames(sds)[1:2] <- c("Subject.ID","Activity")
cname_means <- colnames(means)
cname_sds <- colnames(sds)
for(i in 3:length(cname_means))
{
cname_means[i] <- paste(cname_means[i],"Mean", sep = " - ")
}
for (i in 3:length(cname_sds))
{
cname_sds[i] <- paste(cname_sds[i],"SD", sep = " - ")
}
colnames(means) <- cname_means
colnames(sds) <- cname_sds
##Combine means and sds.
sum_data <- cbind(means,sds)
head(sum_data[,1:10])
?join
sum_data <- join(means,sds,c("Subject.ID","Activity"))
head(sum_data[,1:10])
?write.table
?write.csv
sum_data <- join(means,sds,c("Subject.ID","Activity"))
write.table(sum_data, file = "Tidy Data - Means and SDs.txt")
run_analysis <- function()
{
##Read in features.txt, which contains the vector labels for each of the datasets.
vector_labels <- read.table("features.txt")
##Determine which vector labels contain the mean or standard deviation.
log_sel_vectors <- grepl("mean|std", as.vector(vector_labels[,2]))
##Create vector containing column class for all selected columns (numeric) and NULL for all unselected columns (not mean or standard deviation).
vector_class <- vector(mode = "character", length = nrow(vector_labels))
for (i in 1:nrow(vector_labels))
{
if(log_sel_vectors[i]==FALSE)
{
vector_class[i] <- "NULL"
}
else
{
vector_class[i] <- "character"
}
}
##Read in test and train datasets, along with respective activity and subject labels.
test <- read.table("X_test.txt",col.names = as.vector(vector_labels[,2]),colClasses = vector_class)
test_activities <- read.table("y_test.txt", col.names = "Activity Code")
test_subjects <- read.table("subject_test.txt",col.names = "Subject ID")
train <- read.table("X_train.txt",col.names = as.vector(vector_labels[,2]),colClasses = vector_class)
train_activities <- read.table("y_train.txt", col.names = "Activity Code")
train_subjects <- read.table("subject_train.txt", col.names = "Subject ID")
##Combine data, activity labels, and subject labels for the test data and the train data separately.
##Also adding 2 columns:
## "Data Source": identifies whether data is from test dataset or train dataset.
## "Activity ID": placeholder empty column for translated Activity codes.
all_test <- cbind("Data Source" = rep("test", nrow(test)),test_subjects, test_activities, "Activity" = vector(mode = "character", length = nrow(test)), test)
all_train <- cbind("Data Source" = rep("train", nrow(train)),train_subjects, train_activities, "Activity" = vector(mode = "character", length = nrow(train)), train)
##Combine test and train data. Sort by Subject ID.
data <- arrange(rbind(all_test, all_train),Subject.ID)
data[,5:ncol(data)] <- sapply(data[,5:ncol(data)],as.numeric)
##Translate Activity ID Code into Activity (character describing activity).
data[,"Activity"] <- as.character(data[,"Activity"])
activities <- c("Walking", "Walking_Upstairs", "Walking_Downstairs", "Sitting", "Standing", "Laying")
for(i in 1:nrow(data))
{
index <- data[i,"Activity.Code"]
data[i,"Activity"] <- activities[index]
}
##Create means and standard deviation for each measurement by Subject ID and Activity.
##First four columns were excluded from mean and standard deviation calculations since they do not represent measurements.
means <- aggregate(sapply(data[,5:ncol(data)],as.numeric), by=list(data$Subject.ID,data$Activity),FUN=mean)
sds <- aggregate(data[,5:ncol(data)], by=list(data$Subject.ID,data$Activity),FUN=sd)
##Label each column of "means" and "stdevs" as being a mean or standard deviation, respectively.
##First two columns were also renamed.
colnames(means)[1:2] <- c("Subject.ID","Activity")
colnames(sds)[1:2] <- c("Subject.ID","Activity")
cname_means <- colnames(means)
cname_sds <- colnames(sds)
for(i in 3:length(cname_means))
{
cname_means[i] <- paste(cname_means[i],"Mean", sep = " - ")
}
for (i in 3:length(cname_sds))
{
cname_sds[i] <- paste(cname_sds[i],"SD", sep = " - ")
}
colnames(means) <- cname_means
colnames(sds) <- cname_sds
##Combine means and sds.
##sum_data <- cbind(means,sds)
sum_data <- join(means,sds,c("Subject.ID","Activity"))
write.table(sum_data, file = "Tidy Data - Means and SDs.txt")
return(sum_data)
}
run_analysis()
run_analysis <- function()
{
##Read in features.txt, which contains the vector labels for each of the datasets.
vector_labels <- read.table("features.txt")
##Determine which vector labels contain the mean or standard deviation.
log_sel_vectors <- grepl("mean|std", as.vector(vector_labels[,2]))
##Create vector containing column class for all selected columns (numeric) and NULL for all unselected columns (not mean or standard deviation).
vector_class <- vector(mode = "character", length = nrow(vector_labels))
for (i in 1:nrow(vector_labels))
{
if(log_sel_vectors[i]==FALSE)
{
vector_class[i] <- "NULL"
}
else
{
vector_class[i] <- "character"
}
}
##Read in test and train datasets, along with respective activity and subject labels.
test <- read.table("X_test.txt",col.names = as.vector(vector_labels[,2]),colClasses = vector_class)
test_activities <- read.table("y_test.txt", col.names = "Activity Code")
test_subjects <- read.table("subject_test.txt",col.names = "Subject ID")
train <- read.table("X_train.txt",col.names = as.vector(vector_labels[,2]),colClasses = vector_class)
train_activities <- read.table("y_train.txt", col.names = "Activity Code")
train_subjects <- read.table("subject_train.txt", col.names = "Subject ID")
##Combine data, activity labels, and subject labels for the test data and the train data separately.
##Also adding 2 columns:
## "Data Source": identifies whether data is from test dataset or train dataset.
## "Activity ID": placeholder empty column for translated Activity codes.
all_test <- cbind("Data Source" = rep("test", nrow(test)),test_subjects, test_activities, "Activity" = vector(mode = "character", length = nrow(test)), test)
all_train <- cbind("Data Source" = rep("train", nrow(train)),train_subjects, train_activities, "Activity" = vector(mode = "character", length = nrow(train)), train)
##Combine test and train data. Sort by Subject ID.
data <- arrange(rbind(all_test, all_train),Subject.ID)
data[,5:ncol(data)] <- sapply(data[,5:ncol(data)],as.numeric)
##Translate Activity ID Code into Activity (character describing activity).
data[,"Activity"] <- as.character(data[,"Activity"])
activities <- c("Walking", "Walking_Upstairs", "Walking_Downstairs", "Sitting", "Standing", "Laying")
for(i in 1:nrow(data))
{
index <- data[i,"Activity.Code"]
data[i,"Activity"] <- activities[index]
}
##Create means and standard deviation for each measurement by Subject ID and Activity.
##First four columns were excluded from mean and standard deviation calculations since they do not represent measurements.
means <- aggregate(sapply(data[,5:ncol(data)],as.numeric), by=list(data$Subject.ID,data$Activity),FUN=mean)
sds <- aggregate(data[,5:ncol(data)], by=list(data$Subject.ID,data$Activity),FUN=sd)
##Label each column of "means" and "stdevs" as being a mean or standard deviation, respectively.
##First two columns were also renamed.
colnames(means)[1:2] <- c("Subject.ID","Activity")
colnames(sds)[1:2] <- c("Subject.ID","Activity")
cname_means <- colnames(means)
cname_sds <- colnames(sds)
for(i in 3:length(cname_means))
{
cname_means[i] <- paste(cname_means[i],"Mean", sep = " - ")
}
for (i in 3:length(cname_sds))
{
cname_sds[i] <- paste(cname_sds[i],"SD", sep = " - ")
}
colnames(means) <- cname_means
colnames(sds) <- cname_sds
##Combine means and sds.
##sum_data <- cbind(means,sds)
sum_data <- join(means,sds,c("Subject.ID","Activity"))
write.table(sum_data, file = "Tidy Data - Means and SDs.txt")
return(sum_data)
}
run_analysis()
results <- run_analysis()
79*2+2
head(results[,1:20])
?write.csv
run_analysis <- function()
{
##Read in features.txt, which contains the vector labels for each of the datasets.
vector_labels <- read.table("features.txt")
##Determine which vector labels contain the mean or standard deviation.
log_sel_vectors <- grepl("mean|std", as.vector(vector_labels[,2]))
##Create vector containing column class for all selected columns (numeric) and NULL for all unselected columns (not mean or standard deviation).
vector_class <- vector(mode = "character", length = nrow(vector_labels))
for (i in 1:nrow(vector_labels))
{
if(log_sel_vectors[i]==FALSE)
{
vector_class[i] <- "NULL"
}
else
{
vector_class[i] <- "character"
}
}
##Read in test and train datasets, along with respective activity and subject labels.
test <- read.table("X_test.txt",col.names = as.vector(vector_labels[,2]),colClasses = vector_class)
test_activities <- read.table("y_test.txt", col.names = "Activity Code")
test_subjects <- read.table("subject_test.txt",col.names = "Subject ID")
train <- read.table("X_train.txt",col.names = as.vector(vector_labels[,2]),colClasses = vector_class)
train_activities <- read.table("y_train.txt", col.names = "Activity Code")
train_subjects <- read.table("subject_train.txt", col.names = "Subject ID")
##Combine data, activity labels, and subject labels for the test data and the train data separately.
##Also adding 2 columns:
## "Data Source": identifies whether data is from test dataset or train dataset.
## "Activity ID": placeholder empty column for translated Activity codes.
all_test <- cbind("Data Source" = rep("test", nrow(test)),test_subjects, test_activities, "Activity" = vector(mode = "character", length = nrow(test)), test)
all_train <- cbind("Data Source" = rep("train", nrow(train)),train_subjects, train_activities, "Activity" = vector(mode = "character", length = nrow(train)), train)
##Combine test and train data. Sort by Subject ID.
data <- arrange(rbind(all_test, all_train),Subject.ID)
data[,5:ncol(data)] <- sapply(data[,5:ncol(data)],as.numeric)
##Translate Activity ID Code into Activity (character describing activity).
data[,"Activity"] <- as.character(data[,"Activity"])
activities <- c("Walking", "Walking_Upstairs", "Walking_Downstairs", "Sitting", "Standing", "Laying")
for(i in 1:nrow(data))
{
index <- data[i,"Activity.Code"]
data[i,"Activity"] <- activities[index]
}
##Create means and standard deviation for each measurement by Subject ID and Activity.
##First four columns were excluded from mean and standard deviation calculations since they do not represent measurements.
means <- aggregate(sapply(data[,5:ncol(data)],as.numeric), by=list(data$Subject.ID,data$Activity),FUN=mean)
sds <- aggregate(data[,5:ncol(data)], by=list(data$Subject.ID,data$Activity),FUN=sd)
##Label each column of "means" and "stdevs" as being a mean or standard deviation, respectively.
##First two columns were also renamed.
colnames(means)[1:2] <- c("Subject.ID","Activity")
colnames(sds)[1:2] <- c("Subject.ID","Activity")
cname_means <- colnames(means)
cname_sds <- colnames(sds)
for(i in 3:length(cname_means))
{
cname_means[i] <- paste(cname_means[i],"Mean", sep = " - ")
}
for (i in 3:length(cname_sds))
{
cname_sds[i] <- paste(cname_sds[i],"SD", sep = " - ")
}
colnames(means) <- cname_means
colnames(sds) <- cname_sds
##Combine means and sds.
##sum_data <- cbind(means,sds)
sum_data <- join(means,sds,c("Subject.ID","Activity"))
write.table(sum_data, file = "Tidy Data - Means and SDs.txt")
write.csv(sum_data, file = "Tidy Data - Means and SDs.csv")
return(sum_data)
}
run_analysis()
setwd("C:/Users/betsy/Desktop/Tidy Data Project")
run_analysis()
library(plyr)
run_analysis()
run_analysis()
